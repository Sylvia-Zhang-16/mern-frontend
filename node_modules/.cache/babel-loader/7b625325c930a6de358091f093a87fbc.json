{"ast":null,"code":"var _jsxFileName = \"/Users/sylviazhang/Documents/software-development/projects/MERN/mern-frontend/src/user/pages/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n      ;\n    };\n    fetchUsers();\n  }, [sendRequest]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true);\n};\n_s(Users, \"yuRV4bnUBnwHRpWvTo321+y/Mb0=\", false, function () {\n  return [useHttpClient];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","UsersList","ErrorModal","LoadingSpinner","useHttpClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Users","_s","isLoading","error","sendRequest","clearError","loadedUsers","setLoadedUsers","fetchUsers","responseData","process","env","REACT_APP_BACKEND_URL","users","err","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","items","_c","$RefreshReg$"],"sources":["/Users/sylviazhang/Documents/software-development/projects/MERN/mern-frontend/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n\r\n    const { isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\r\n            \r\n                setLoadedUsers(responseData.users);\r\n\r\n            }catch(err){\r\n            };\r\n\r\n        };\r\n\r\n        fetchUsers();\r\n\r\n    }, [sendRequest]);\r\n\r\n\r\n    return (\r\n        <><ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && (\r\n        <div className='center'>\r\n            <LoadingSpinner />\r\n        </div>)}\r\n\r\n        { !isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,+CAA+C;AACtE,OAAOC,cAAc,MAAM,mDAAmD;AAC9E,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGV,aAAa,CAAC,CAAC;EAEpE,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,YAAY,GAAG,MAAML,WAAW,CAACM,OAAO,CAACC,GAAG,CAACC,qBAAqB,GAAG,QAAQ,CAAC;QAEpFL,cAAc,CAACE,YAAY,CAACI,KAAK,CAAC;MAEtC,CAAC,QAAMC,GAAG,EAAC,CACX;MAAC;IAEL,CAAC;IAEDN,UAAU,CAAC,CAAC;EAEhB,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAGjB,oBACIP,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBAAElB,OAAA,CAACJ,UAAU;MAACU,KAAK,EAAEA,KAAM;MAACa,OAAO,EAAEX;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClDlB,SAAS,iBACVL,OAAA;MAAKwB,SAAS,EAAC,QAAQ;MAAAN,QAAA,eACnBlB,OAAA,CAACH,cAAc;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAE,EAEL,CAAClB,SAAS,IAAII,WAAW,iBAAIT,OAAA,CAACL,SAAS;MAAC8B,KAAK,EAAEhB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC9D,CAAC;AAEX,CAAC;AAACnB,EAAA,CAjCID,KAAK;EAAA,QAE8CL,aAAa;AAAA;AAAA4B,EAAA,GAFhEvB,KAAK;AAmCX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}