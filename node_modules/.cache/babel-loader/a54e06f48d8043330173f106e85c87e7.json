{"ast":null,"code":"var _jsxFileName = \"/Users/sylviazhang/Documents/software-development/projects/MERN/mern-frontend/src/user/pages/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport './Auth.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/signup', 'POST', formData);\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter a name.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"email\",\n          type: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email address.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Please enter a valid password, at least 6 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(ImageUpload, {\n          center: true,\n          id: \"image\",\n          onInput: inputHandler,\n          errorText: \"Please provide an image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Auth, \"/cPEAoj/5chXdaORvL/R/PtTN4g=\", false, function () {\n  return [useHttpClient, useForm];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","Card","Button","Input","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","useHttpClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","responseData","process","env","REACT_APP_BACKEND_URL","JSON","stringify","login","userId","token","err","formData","FormData","append","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","asOverlay","onSubmit","element","id","type","label","validators","errorText","onInput","center","disabled","inverse","onClick","_c","$RefreshReg$"],"sources":["/Users/sylviazhang/Documents/software-development/projects/MERN/mern-frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport './Auth.css'\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n    VALIDATOR_EMAIL,\r\n    VALIDATOR_MINLENGTH,\r\n    VALIDATOR_REQUIRE\r\n  } from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n          email: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          password: {\r\n            value: '',\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    \r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n          setFormData(\r\n            {\r\n              ...formState.inputs,\r\n              name: undefined,\r\n              image: undefined\r\n            },\r\n            formState.inputs.email.isValid && formState.inputs.password.isValid\r\n          );\r\n        } else {\r\n          setFormData(\r\n            {\r\n              ...formState.inputs,\r\n              name: {\r\n                value: '',\r\n                isValid: false\r\n              },\r\n              image: {\r\n                value: null,\r\n                isValid: false\r\n              }\r\n            },\r\n            false\r\n          );\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n      };\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        if (isLoginMode) {\r\n          try {\r\n            const responseData = await sendRequest(\r\n              process.env.REACT_APP_BACKEND_URL +'/users/login', \r\n              'POST',\r\n            JSON.stringify({\r\n              email: formState.inputs.email.value,\r\n              password: formState.inputs.password.value\r\n            }),\r\n             {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n            auth.login(responseData.userId, responseData.token);\r\n          }catch (err) {}  \r\n        }else{\r\n          try{\r\n            const formData = new FormData();\r\n            formData.append('email', formState.inputs.email.value);\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('password', formState.inputs.password.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n            const responseData = await sendRequest(\r\n              process.env.REACT_APP_BACKEND_URL +'/users/signup', \r\n              'POST',\r\n              formData\r\n            );\r\n            \r\n            auth.login(responseData.userId, responseData.token);\r\n          }catch(err) {}\r\n      }  \r\n    };\r\n    \r\n  return (\r\n    <>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    <Card className=\"authentication\">\r\n    {isLoading && <LoadingSpinner asOverlay />}\r\n      <h2>Login Required</h2>\r\n      <hr />\r\n      <form onSubmit={authSubmitHandler}>\r\n        {!isLoginMode && (\r\n          <Input\r\n            element=\"input\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            label=\"Your Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a name.\"\r\n            onInput={inputHandler} />\r\n        )}\r\n        <Input\r\n          element=\"input\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"E-Mail\"\r\n          validators={[VALIDATOR_EMAIL()]}\r\n          errorText=\"Please enter a valid email address.\"\r\n          onInput={inputHandler} />\r\n        <Input\r\n          element=\"input\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          validators={[VALIDATOR_MINLENGTH(6)]}\r\n          errorText=\"Please enter a valid password, at least 6 characters.\"\r\n          onInput={inputHandler} />\r\n        {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText='Please provide an image.'/>}\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n        </Button>\r\n      </form>\r\n      <Button inverse onClick={switchModeHandler}>\r\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n      </Button>\r\n    </Card></>\r\n   )\r\n\r\n};\r\n\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}