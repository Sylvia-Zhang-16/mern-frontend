{"ast":null,"code":"var _jsxFileName = \"/Users/sylviazhang/Documents/software-development/projects/MERN/mern-frontend/src/shared/components/FormElements/Input.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      {\n        return {\n          ...state,\n          isTouched: true\n        };\n      }\n    default:\n      return state;\n  }\n  ;\n};\nconst Input = props => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isValid: props.initialValid || false,\n    isTouched: false\n  });\n  // currentstate, dispatch方法=（reducer方法，state初始值）\n\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"sfuKS8Tz7dBDSsP/AX2Ei2UG/+Y=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","useEffect","validate","jsxDEV","_jsxDEV","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","_s","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","children","htmlFor","label","errorText","_c","$RefreshReg$"],"sources":["/Users/sylviazhang/Documents/software-development/projects/MERN/mern-frontend/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value:action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH':{\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value:props.initialValue || '', \r\n        isValid:props.initialValid || false, \r\n        isTouched:false});\r\n    // currentstate, dispatch方法=（reducer方法，state初始值）\r\n\r\n    const {id, onInput } = props;\r\n    const {value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    },[id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event => {\r\n        dispatch({type:'CHANGE', val:event.target.value, validators:props.validators});\r\n\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({type:'TOUCH'});\r\n\r\n    };\r\n\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input \r\n        id={props.id} \r\n        type={props.type} \r\n        placeholder={props.placeholder} \r\n        onChange={changeHandler} \r\n        onBlur={touchHandler} \r\n        value={inputState.value}/>\r\n      ) : (\r\n        <textarea \r\n        id={props.id} \r\n        rows={props.rows || 3} \r\n        onChange={changeHandler} \r\n        onBlur={touchHandler} \r\n        value={inputState.value}/>\r\n      );\r\n    \r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n          <label htmlFor={props.id}>{props.label}</label>\r\n          {element}\r\n          {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n      );\r\n  \r\n};\r\n\r\nexport default Input;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}