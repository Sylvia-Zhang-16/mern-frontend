{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/auth-context\";\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState({});\n  const [tokenExpiration, setTokenExpiration] = useState();\n  const auth = useContext(AuthContext);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpiration(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    setTokenExpiration(null);\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpiration) {\n      const remainingTime = tokenExpiration.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpiration]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};\n_s(useAuth, \"j2uAtt5YaeI84/fRq5JFQpAKC/E=\");","map":{"version":3,"names":["useCallback","useState","useEffect","useContext","AuthContext","logoutTimer","useAuth","_s","token","setToken","userId","setUserId","tokenExpiration","setTokenExpiration","auth","login","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["/Users/sylviazhang/Documents/software-development/projects/MERN/mern-frontend/src/shared/hooks/auth-hook.js"],"sourcesContent":["import { useCallback, useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState({});\r\n  const [tokenExpiration, setTokenExpiration] = useState();\r\n  const auth = useContext(AuthContext)\r\n \r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 *60);\r\n    setTokenExpiration(tokenExpirationDate);\r\n\r\n    localStorage.setItem('userData', JSON.stringify({userId: uid, token: token, expiration: tokenExpirationDate.toISOString() }))\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem('userData');\r\n    setTokenExpiration(null);\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpiration) {\r\n      const remainingTime = tokenExpiration.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    }else{\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpiration])\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpE,SAASC,WAAW,QAAQ,yBAAyB;AAErD,IAAIC,WAAW;AAEf,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACxD,MAAMa,IAAI,GAAGX,UAAU,CAACC,WAAW,CAAC;EAGpC,MAAMW,KAAK,GAAGf,WAAW,CAAC,CAACgB,GAAG,EAAER,KAAK,EAAES,cAAc,KAAK;IACxDR,QAAQ,CAACD,KAAK,CAAC;IACfG,SAAS,CAACK,GAAG,CAAC;IACd,MAAME,mBAAmB,GAAGD,cAAc,IAAI,IAAIE,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAE,EAAE,CAAC;IAC5FP,kBAAkB,CAACK,mBAAmB,CAAC;IAEvCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACd,MAAM,EAAEM,GAAG;MAAER,KAAK,EAAEA,KAAK;MAAEiB,UAAU,EAAEP,mBAAmB,CAACQ,WAAW,CAAC;IAAE,CAAC,CAAC,CAAC;EAC/H,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAG3B,WAAW,CAAC,MAAM;IAC/BS,QAAQ,CAAC,IAAI,CAAC;IACdE,SAAS,CAAC,IAAI,CAAC;IACfU,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;IACnCf,kBAAkB,CAAC,IAAI,CAAC;EAE1B,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,IAAII,eAAe,EAAE;MAC5B,MAAMiB,aAAa,GAAGjB,eAAe,CAACQ,OAAO,CAAC,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACtEf,WAAW,GAAGyB,UAAU,CAACH,MAAM,EAAEE,aAAa,CAAC;IACjD,CAAC,MAAI;MACHE,YAAY,CAAC1B,WAAW,CAAC;IAC3B;EACF,CAAC,EAAE,CAACG,KAAK,EAAEmB,MAAM,EAAEf,eAAe,CAAC,CAAC;EAEpCV,SAAS,CAAC,MAAM;IACd,MAAM8B,UAAU,GAAGT,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/D,IAAIF,UAAU,IAAIA,UAAU,CAACxB,KAAK,IAAI,IAAIW,IAAI,CAACa,UAAU,CAACP,UAAU,CAAC,GAAG,IAAIN,IAAI,CAAC,CAAC,EAAE;MAClFJ,KAAK,CAACiB,UAAU,CAACtB,MAAM,EAAEsB,UAAU,CAACxB,KAAK,EAAE,IAAIW,IAAI,CAACa,UAAU,CAACP,UAAU,CAAC,CAAC;IAC7E;EACF,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,OAAO;IAAEP,KAAK;IAAEO,KAAK;IAAEY,MAAM;IAAEjB;EAAO,CAAC;AACzC,CAAC;AAACH,EAAA,CAzCWD,OAAO"},"metadata":{},"sourceType":"module"}